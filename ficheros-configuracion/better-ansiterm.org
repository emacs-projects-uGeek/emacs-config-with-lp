#+TITLE: better-ansiterm
#+AUTHOR: Maxxcan Fox
#+EMAIL: maxxcan@disroot.org

* Introducción

Vamos a añadir algo de código para añadir algunas mejoras a la hora de trabajar con la terminal en emacs distinto al eshell.

Estas mejoras están sacadas del blog [[https://echosa.github.io/blog/2012/06/06/improving-ansi-term/][Dev and Such]] de [[https://twitter.com/echosa][Brian Zwahr]]

* Código para mejorar la experiencia ansiterm

Vamos a añadir algunas mejoras tales como:

** Eliminar el buffer cuando escribo exit

#+name: exit-buffer
#+BEGIN_SRC emacs-lisp
;; eliminar el buffer cuando escribo exit

(defadvice term-sentinel (around my-advice-term-sentinel (proc msg))
  (if (memq (process-status proc) '(signal exit))
      (let ((buffer (process-buffer proc)))
        ad-do-it
        (kill-buffer buffer))
    ad-do-it))
(ad-activate 'term-sentinel)
#+END_SRC

** Elegir por defecto una shell en concreto y una codificación

En nuestro caso usaremos *zsh* como shell por defecto y como codificación  de caractéres el *utf-8*

#+name: zsh-and-utf8
#+BEGIN_SRC emacs-lisp
;; que use por defecto zsh

(defvar my-term-shell "/bin/zsh")
(defadvice ansi-term (before force-bash)
  (interactive (list my-term-shell)))
(ad-activate 'ansi-term)

;; y utf-8

(defun my-term-use-utf8 ()
  (set-buffer-process-coding-system 'utf-8-unix 'utf-8-unix))
(add-hook 'term-exec-hook 'my-term-use-utf8)
#+END_SRC

** Para que la combinación de teclas C-y  sirve para pegar

Para terminar vamos a añadir un código para que la combinación de teclas Control +  y sirva para pegar texto en la terminal

#+name: paste
#+BEGIN_SRC emacs-lisp
(defun my-term-paste (&optional string)
 (interactive)
 (process-send-string
  (get-buffer-process (current-buffer))
  (if string string (current-kill 0))))

(defun my-term-hook ()
  (goto-address-mode)
  (define-key term-raw-map "\C-y" 'my-term-paste))

;; más información en: https://echosa.github.io/blog/2012/06/06/improving-ansi-term

#+END_SRC

* Juntando todo el código 

#+BEGIN_SRC emacs-lisp :tangle ~/.emacs.d/config/better-ansiterm.el :noweb yes :padline no :results silent
<<exit-buffer>>
<<zsh-and-utf8>>
<<paste>>
#+END_SRC

* Exportando 

Tal como he indicado en la propia plantilla para exportar el código podemos usar la combinación de teclas C-c C-v t (C es control) o bien escribir en el minibuffer con Alt-x, org-babel-tangle

Como vemos al final hay dos conjuntos de código que tienen la orden :tangle y nombre de archivo. Ese tangle significa que ese código se generará en un fichero que le hemos indicado.
